From 28c5c146301c0c256bba780ab4856523fea9fa68 Mon Sep 17 00:00:00 2001
From: Ash Charles <ashcharles@gmail.com>
Date: Wed, 7 Jan 2015 08:52:23 -0800
Subject: [PATCH 15/32] omap: overo: Add Caspa camera to device tree

Overo boots and detects Caspa (mt9v032) via i2c.  After manually
modprobing omap3-isp, the ISP pipeline is available and can be
configured using media-ctl.  The device is available at '2-005c'.

See [1] for branch data and discussion.

[1] http://www.spinics.net/lists/linux-omap/msg114378.html
---
 .../boot/dts/omap3-overo-common-peripherals.dtsi   | 32 ++++++++++++
 drivers/media/i2c/mt9v032.c                        | 59 +++++++++++++++++++++-
 drivers/media/platform/omap3isp/isphist.c          |  2 +-
 3 files changed, 91 insertions(+), 2 deletions(-)

diff --git a/arch/arm/boot/dts/omap3-overo-common-peripherals.dtsi b/arch/arm/boot/dts/omap3-overo-common-peripherals.dtsi
index 520453d95704..7cfb808e8f5a 100644
--- a/arch/arm/boot/dts/omap3-overo-common-peripherals.dtsi
+++ b/arch/arm/boot/dts/omap3-overo-common-peripherals.dtsi
@@ -81,8 +81,40 @@
 		st,max-limit-y = <550>;
 		st,max-limit-z = <750>;
 	};
+
+	/* optional Caspa (MT9V032) camera */
+	mt9v032_1: camera@5c {
+		compatible = "aptina,mt9v032";
+		reg = <0x5c>;
+		clocks = <&omap3_isp 0>;
+		clock-names = "cam_xclka";
+		clock-frequency = <26600000>;
+		port {
+			mt9v032_1_1: endpoint {
+				remote-endpoint = <&ccdc_ep>;
+				clk-pol = <0>;
+				link-frequencies = /bits/ 64 <13000000 26600000 27000000>;
+			};
+		};
+	};
+};
+
+&omap3_isp {
+	vdd-csiphy1-supply = <&vaux2>;
+	vdd-csiphy2-supply = <&vaux2>;
+	ports {
+		port@0 {
+			reg = <0>;
+			ccdc_ep: endpoint {
+				remote-endpoint = <&mt9v032_1_1>;
+				bus-width = <12>;
+				data-shift = <0>;
+			};
+		};
+	};
 };
 
+
 &mmc3 {
 	status = "disabled";
 };
diff --git a/drivers/media/i2c/mt9v032.c b/drivers/media/i2c/mt9v032.c
index d044bce312e0..575923e36b02 100644
--- a/drivers/media/i2c/mt9v032.c
+++ b/drivers/media/i2c/mt9v032.c
@@ -22,6 +22,9 @@
 #include <linux/videodev2.h>
 #include <linux/v4l2-mediabus.h>
 #include <linux/module.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
+#include <linux/of_graph.h>
 
 #include <media/mt9v032.h>
 #include <media/v4l2-ctrls.h>
@@ -870,15 +873,53 @@ static const struct regmap_config mt9v032_regmap_config = {
 /* -----------------------------------------------------------------------------
  * Driver initialization and probing
  */
+static const s64 mt9v032_link_freqs[] = {
+	13000000,
+	26600000,
+	27000000,
+	0,
+};
+
+static struct mt9v032_platform_data *
+mt9v032_get_pdata(struct i2c_client *client)
+{
+	struct mt9v032_platform_data *pdata;
+	struct device_node *np;
+
+	if (!IS_ENABLED(CONFIG_OF) || !client->dev.of_node)
+		return client->dev.platform_data;
+
+	np = of_graph_get_next_endpoint(client->dev.of_node, NULL);
+	if (!np)
+		return NULL;
+
+	pdata = devm_kzalloc(&client->dev, sizeof(*pdata), GFP_KERNEL);
+	if (!pdata)
+		goto done;
+
+	//of_property_read_u32(np, "clk-pol", &pdata->clk_pol);
+	pdata->clk_pol = 0;
+	pdata->link_freqs = mt9v032_link_freqs;
+	pdata->link_def_freq = 26600000;
+
+done:
+	of_node_put(np);
+	return pdata;
+}
 
 static int mt9v032_probe(struct i2c_client *client,
 		const struct i2c_device_id *did)
 {
-	struct mt9v032_platform_data *pdata = client->dev.platform_data;
+	struct mt9v032_platform_data *pdata = mt9v032_get_pdata(client);
 	struct mt9v032 *mt9v032;
 	unsigned int i;
 	int ret;
 
+	if (!pdata) {
+		dev_err(&client->dev, "No platform data\n");
+		return -EINVAL;
+	}
+
 	if (!i2c_check_functionality(client->adapter,
 				     I2C_FUNC_SMBUS_WORD_DATA)) {
 		dev_warn(&client->adapter->dev,
@@ -1030,8 +1071,24 @@ static const struct i2c_device_id mt9v032_id[] = {
 };
 MODULE_DEVICE_TABLE(i2c, mt9v032_id);
 
+#if IS_ENABLED(CONFIG_OF)
+static const struct of_device_id mt9v032_of_match[] = {
+	{ .compatible = "aptina,mt9v022", },
+	{ .compatible = "aptina,mt9v022m", },
+	{ .compatible = "aptina,mt9v022", },
+	{ .compatible = "aptina,mt9v022m", },
+	{ .compatible = "aptina,mt9v032", },
+	{ .compatible = "aptina,mt9v032m", },
+	{ .compatible = "aptina,mt9v034", },
+	{ .compatible = "aptina,mt9v034m", },
+	{ /* sentinel */ },
+};
+MODULE_DEVICE_TABLE(of, mt9v032_of_match);
+#endif
+
 static struct i2c_driver mt9v032_driver = {
 	.driver = {
+		.of_match_table = of_match_ptr(mt9v032_of_match),
 		.name = "mt9v032",
 	},
 	.probe		= mt9v032_probe,
diff --git a/drivers/media/platform/omap3isp/isphist.c b/drivers/media/platform/omap3isp/isphist.c
index ce822c34c843..e4c9c8032efd 100644
--- a/drivers/media/platform/omap3isp/isphist.c
+++ b/drivers/media/platform/omap3isp/isphist.c
@@ -26,7 +26,7 @@
 
 #define OMAP24XX_DMA_NO_DEVICE		0
 
-#define HIST_CONFIG_DMA	1
+#define HIST_CONFIG_DMA	0
 
 #define HIST_USING_DMA(hist) ((hist)->dma_ch >= 0)
 
-- 
2.1.4

